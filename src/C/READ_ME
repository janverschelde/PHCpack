PHCpack as a library of C functions with a state machine in PHCv2.4.90

This directory collects header files and definitions of C which bind the
operations of PHCpack as a state machine in a systematic manner.
The need for this library grew from the use of MPI, started with the 
work of Yusong Wang, continued with Yan Zhuang and Yun Guan.
Thanks to Anton Leykin for suggesting changes in the syntax of functions
having arrays of parameters.

This C library was used for the C extension module for Python and
to integrate the Path library, moved to the ../Mod folder in v2.4.85.

In v2.4.86, this folder was renamed from Lib into C,
because the "lib" folder will hold the libPHCpack shared object file.

Support for Laurent systems was added in version 2.3.72.
New in 2.3.84 are path trackers with generators, available in the files
next_track and lib_nxtsol.

To create executable versions of the program, use the makefile(s)
in the directory ../Objects.
Files starting with the prefix lib_ are test files.

------------------------------------------------------------------------------
file name            : short description
------------------------------------------------------------------------------
welcome.c            : illustrates call to use_c2phc of libPHCpack
------------------------------------------------------------------------------
phcpack.h            : prototypes for basic operations in PHCpack
phcpack.c            : definitions of functions in phcpack.h, use_c2phc
phcpack4c.h          : for a pure C interface, without demics
phcpack4c.c          : definition of functions in phcpack4c.h, use c2phc4c
syscon.h             : prototypes for systems container
syscon.c             : definitions of functions in syscon.h
lib_syscon.c         : test on operations in systems container
tabform.h            : prototypes of functions to compute the tableau form
tabform.c            : definitions of functions for tableau formats
lib_tabform.c        : test on tableau form of a system
syspool.h            : prototypes for systems pool
syspool.c            : definitions of functions in syspool.h
solcon.h             : prototypes for solutions container
solcon.c             : definitions of functions in solcon.h
lib_solcon.c         : test on operations in solutions container
lib_solrep.c         : test on condition report in double precision
lib_read.c           : reading and writing a polynomial system
lib_newton.c         : validation of solutions by Newton's method
lib_conpar.c         : test on tuning the continuation parameters
lib_poco.c           : calling the path trackers in PHCpack
-----------------------------------------------------------------------------
product.h            : linear-product root counts and systems
product.c            : definitions of functions in product.h
lib_roco.c           : test on operations in product
celcon.h             : prototypes for cells container
celcon.c             : definitions of functions in celcon.h
intcelcon.h          : prototypes for cells induced by integer lifting
intcelcon.c          : definitions of the functions in intcelcon.h
lib_celcon.c         : test on operations in cells container
lib_celphc.c         : powers of t in polyhedral homotopy
jump_track.h         : prototypes for jump starting homotopies
jump_track.c         : definitions of the functions in jump_track.h
lib_track.c          : tracking paths with incremental read/write
next_track.h         : prototypes for path tracking with generator
next_track.c         : definition of functions in next_track.h
lib_nxtsol           : interactive testing tracking with generator
-----------------------------------------------------------------------------
witset.h             : prototypes for witness sets
witset.c             : definitions of functions of witset.h
lib_witset.c         : tests functions of witset  
lib_factor.c         : factorization using monodromy breakup
witsols.h            : prototypes to call the witness solvers
witsols.c            : definitions of the functions in witsols.h
lib_witsols          : computes a numerical irreducible decomposition
------------------------------------------------------------------------------
schubert.h           : numerical Schubert calculus prototypes
schubert.c           : definitions of numerical Schubert calculus
pieri_tree.h         : prototypes for Pieri tree
pieri_tree.c         : definitions of the Pieri tree operations
ts_pieri_tree.c      : Pieri root count with the Pieri tree
lib_pieri.c          : test on Pieri homotopies
lib_lrhom.c          : calls Littlewood-Richardson homotopies
------------------------------------------------------------------------------
unisolvers.h         : prototypes of univariate root finders
unisolvers.c         : defines gateway functions to PHCpack
lib_unisolve.c       : test on univariate root finders
------------------------------------------------------------------------------
giftwrappers.h       : prototypes for the giftwrapping method
giftwrappers.c       : calls _ada_use_c2phc
lib_giftwrap.c       : test on convex hull computation
numbtrop.h           : prototypes for numerical tropisms container
numbtrop.c           : wrapped calls to the Ada to C gateway procedure
lib_numbtrop         : tests on randomly generated numbers
series.h             : Newton's method for power series solutions
lib_series           : test on power series methods
padcon.h             : Pade continuation
lib_padcon           : test on Pade continuation
------------------------------------------------------------------------------
lists_and_strings    : arrays of numbers <-> strings of lists
ts_list2str          : interactive test on conversion
------------------------------------------------------------------------------
reducers.h           : prototypes for the reduction methods
reducers.c           : defines the reduction of a polynomial system
lib_reduce.c         : test the reduction of systems
scalers.h            : prototypes for the scaling methods
scalers.c            : defines the scaling of systems and solutions
lib_scale.c          : test on the scaling methods
------------------------------------------------------------------------------
multiplicity.h       : prototypes for the multiplicity structure computation
multiplicity.c       : defines the computation of the multiplicity structure
lib_multip.c         : test multiplicity structure computation
------------------------------------------------------------------------------
sweep.c              : interface to the sweep homotopy
lib_sweep.c          : test on the sweep
------------------------------------------------------------------------------
phc_solve.c          : test on the blackbox solver in PHCpack
------------------------------------------------------------------------------
