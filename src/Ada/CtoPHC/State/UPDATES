Sun 17 Mar 2024 : extended pade_continuation_interface, use_padcon,
  and use_c2phc4c with a function to return the predicted solution.

Tue 27 Feb 2024 : in use_c2phc4c, replaced the procedure write_menu 
  by the procedure write_welcome, which defines the action for job #0.

Tue 20 Feb 2024 : extended irreducible_components_interface, use_witsols,
  and use_c4phc with a function to write the irreducible factor string.

Tue 13 Feb 2024 : in newton_interface.adb, passed the verbose level value
  to the root refiners.

Mon 12 Feb 2024 : added print statements to newton_interface.adb.

Sat 10 Feb 2024 : fixed bugs in phcpack_operations.adb to call the
  increment-and-fix continuation procedures correctly with the target.
  Added verbose level in phcpack_operations.ads.  Updated
  path_trackers_interface.adb for the passing of the verbose level.

Tue 23 Jan 2024 : extended cells_interface.adb with error message when
  verbose level is positive when the mixed volume of a cell procedure fails.
  Patched a bug in cells_interface.adb on retrieving a mixed cells when
  the stable mixed volume is computed.

Mon 15 Jan 2024 : extended path_trackers_interface with 6 procedures on
  Laurent homotopies, modified phcpack_operations, updated use_track,
  and use_c2phc4c.

Fri 12 Jan 2024 : removed put() in standard_monodromy_permutations.adb.

Thu 11 Jan 2024 : added verbose level in the Permutation function
  of standard_monodromy_permutations, passed the option vrblvl in
  monodromy_interface.adb.

Tue 9 Jan 2024 : in monodromy_interface.adb, fixed messaging.
  Fixed output in standard_monodromy_permutations.adb.

Sat 30 Dec 2023 : in schubert_interface.adb, used the verbose level to
  expose the commented out debugging information.

Thu 21 Dec 2023 : extended job_handlers and use_c2phc4c with a function
  to return the number of available CPU cores.

Mon 16 Jan 2023 : one edit in standard_polysys_interface.adb.

Sun 3 Jul 2022 : bug fixed in job_handlers.adb by initialization.

Sun 29 May 2022 : fixed bug in witness_interface.adb, as square_and_embed
  adds already the names of the embed symbols to the symbol table.

Tue 10 May 2022 : to pade_continuation_interface, added a function to
  reset the homotopy continuation parameters, updated use_padcon,
  and use_c2phc4c, to export the new function to C and Python.

Wed 16 Jun 2021 : moved *fil* packages and test to ../Interface.
  Moved all *sys* containers and pools to ../Interface.

Mon 14 Jun 2021 : moved assignments_in_ada_and_c.a* to ../Types.

Sun 13 Jun 2021 : fixed ts_celcon.adb for the renaming of the package
  drivers_to_lifting_functions to main_lifting_functions.

Tue 15 Dec 2020 : updated integer_cells_container.adb for compiler warnings.

Mon 14 Dec 2020 : extended job_handlers and use_c2phc4c with functions
  to set and get the gamma constant.  Added verbose level incoming message
  in the set and get of gamma constant in job_handlers.adb.

Sun 13 Dec 2020 : updated job_handlers.adb for the return of gamma in
  the blackbox solver and in the blackbox_polyhedral_solvers.
  To phcpack_operations, added procedures to retrieve the stored gamma.

Fri 11 Dec 2020 : extended phcpack_operations with the option to set the
  power of t with a homotopy definition; updated path_trackers_interface
  and use_track.adb.

Mon 30 Nov 2020 : updated job_handlers so the solvers store the start
  system and start solutions in the data management package.
  Adjusted use_c2phc.ads and use_c2phc.adb so the verbose level is passed.

Sun 29 Nov 2020 : updated schubert_interface.adb for the renaming of the
  package drivers_for_schubert_induction into main_schubert_induction.
  Updated pieri_interface.adb for the renamed make_input_planes and
  main_pieri_homotopies.

Thu 19 Nov 2020 : updated giftwrap_interface with an additional argument
  to the Giftwrap_String_Size function.

Sun 8 Nov 2020 : updated continuation_parameters_interface.adb and
  phcpack_operations.adb for the renaming of drivers_for_poly_continuation
  into main_poly_continuation.

Tue 27 Oct 2020 : in cells_container.adb, changed the Deep_Clear() into
  Shallow_Clear() of the orgcells (original) and stbcells (stable cells).

Mon 28 Sep 2020 : extended job_handlers with the option to the solver of
  polynomials in double precision, for focus on polyhedral homotopies.
  To job_handlers, this option also for the solvers of Laurent systems
  in double precision, as this solver is called by phcpy.

Sat 22 Aug 2020 : added verbose level parameter to c_to_phcpack,
  adjusted the calls in use_c2phc4c.adb.

Fri 21 Aug 2020 : encapsulated the writing of multiprecision start and
  target solutions in use_c2phc4c.adb, extending multprec_solutions_interface.

Tue 18 Aug 2020 : encapsulated prompting for target and start system in
  use_track.adb, extending {standard,dobldobl,quaddobl}_polysys_interface.

Mon 17 Aug 2020 : updates in use_track.adb for compiler warnings.
  Moved functions from use_c2phc4c.adb to multprec_polysys_interface.
  Moved functions from use_track.adb to standard_polysys_interface.
  Moved functions from use_c2fac.adb to monodromy_interface.

Sun 16 Aug 2020 : new package cascade_homotopy_interface with functions
  from use_track.adb, extended path_trackers_interface.adb with functions
  from use_c2phc4c.adb.  New package file_management_interface with
  functions from standard_solutions_interface, use_track.adb, and
  use_c2phc4c.adb.  Updated use_solcon.adb.

Sat 15 Aug 2020 : moved functions into path_trackers_interface, with code
  from use_c2phc4c.adb.  Added to linear_products_interface, a function
  from use_track.adb.  Fixed documentation error in use_c2phc4c.ads.
  Moved functions from use_c2phc4c.adb and use_multip.adb into the new 
  package deflation_interface.  Added verbose level to use_multip.ads.
  Moved code from use_track.adb to diagonal_homotopy_interface,
  from use_c2phc4c.adb to symbol_table_interface, and from use_c2fac.adb
  to monodromy_interface.

Fri 14 Aug 2020 : moved code from use_c2fac.adb into monodromy_interface.
  Move more code from use_c2fac.adb into witness_ and monodromy_interface.

Thu 13 Aug 2020 : moved functions from use_c2phc4c.adb to witness_interface.
  New package path_trackers_interface, with code from use_track.adb.
  Fixed some documentation errors in use_track.ads and use_c2phc4c.ads.
  New package monodromy_interface with functions form use_c2fac.adb.

Wed 12 Aug 2020 : new package continuation_parameter_interface with code
  from use_c2phc4c.adb.  Extracted functions from use_c2fac.adb into the
  new package witness_interface.  Added verbose level to use_c2fac.ads.

Tue 11 Aug 2020 : new package standard_solspool_interface with code from
  use_solpool.adb.  Added verbose level to use_solpool.ads.
  New package newton_interface with code from use_c2phc4c.adb.

Sun 9 Aug 2020 : new packages {standard,dobldobl,quaddobl}_syspool_interface
  with code from use_syspool.adb.  Add verbose level to use_syspool.ads.

Sat 8 Aug 2020 : new package tableau_form_interface with functions from
  use_tabform.adb, added the verbose level to use_tabform.ads.
  To diagonal_homotopy_interface, added job functions from use_track.adb.

Fri 7 Aug 2020 : moved into standard_solutions_interface the last remaining
  functions from use_solcon.adb so only one case handler remains.

Thu 6 Aug 2020 : moved interface functions into standard_solutions_interface
  from the job handler function use_solcon.adb.

Wed 5 Aug 2020 : moved functions from use_solcon into the solution interface
  packages, {standard, dobldobl, quaddobl}_solution_interface, and fixed
  specification errors in {standard, dobldobl, quaddobl}_polysys_interface.
  Moved more functions from use_solcon.adb to *_solution_interface packages.
  To standard_solutions_interface, added more functions from use_solcon.adb.
  To *dobl_solutions_interface, added interface function to set the value
  of the continuation parameter to zero.

Tue 4 Aug 2020 : in *_solutions_interface.adb, added close(file) at all
  places where a file was opened for reading.  Moved the function to clear
  the symbol table from standard_polysys_interface to symbol_table_interface
  and moved the function to add a symbol to the table from use_syscon.adb
  to symbol_table_interface.  In multprec_laursys_interface.adb, fixed the
  the exception codes.  Eliminated two obsolute functions and moved the last
  two Job functions from use_syscon to standard_polysys_interface.

Mon 3 Aug 2020 : moved job functions from use_syscon.adb to the packages
  {standard,dobldobl,quaddobl}_polysys_interface.

Sun 2 Aug 2020 : moved to *solutions_interface* functions from use_solcon.adb.

Sat 1 Aug 2020 : new package step_trackers_interface with the functions
  from use_nxtsol.adb.  Added verbose level to use_nxtsol.ads.
  Moved functions from use_reduction.adb into reduction_interface.
  Added verbose level to use_reduction.ads.
  Moved all functions to drop a variable by index or by name from
  use_syscon.adb into the proper *sys_interface packages.
  Added value of verbose level parameter in the calls to the handlers
  in use_c2phc4c.adb.

Fri 31 Jul 2020 : new package univariate_solvers_interface with jobs
  taken from unisolve.  Passed verbose level to unisolve.
  Moved functions from use_roco.adb into linear_products_interface,
  a new package for linear product bounds and start systems.
  The verbose level is added as a parameter in use_roco.ads.
  Added new package diagonal_homotopy_interface, with functions from
  use_track.adb, added verbose parameter to use_track.ads.

Thu 30 Jul 2020 : moved job functions from use_solcon.adb to the
  *_solution_interface packages.

Wed 29 Jul 2020 : passed verbose level to the blackbox solvers in the
  solve procedures of job_handlers.adb.

Tue 28 Jul 2020 : new package cells_interface with improved versions of
  the interface function called in use_celcon.  Moved functions out of
  use_c2pieri.adb into a new package pieri_interface.  Added the verbose
  level to the input of use_c2pieri.  Passed the verbose level in
  use_c2phc4c.adb.  Moved string representation functions from use_syscon.adb
  to *sys_interface* packages.

Mon 27 Jul 2020 : moved functions from use_sweep into a new package
  sweep_interface, added verbose level to use_sweep.
  Added new package member_interface, with the functions from use_c2mbt,
  added verbose level parameter to use_c2mbt.
  Renamed and improved many functions in use_celcon,
  added verbose level as an additional parameter.

Sun 26 Jul 2020 : new package giftwrap_interface with functions taken
  from use_giftwrap.  Updated use_c2phc4c.adb to pass verbose level.

Sat 25 Jul 2020 : new package multprec_solutions_interface with functions
  from use_solcon.  Updated use_c2phc4c.adb to pass the verbose level.
  Moved functions from use_series.adb into power_series_interface,
  a new package to group the functions to run Newton's method on series.
  Moved functions from use_scaling.adb into scaling_interface,
  to apply equation and coefficient scaling, added the verbose level
  to use_scaling.  Moved functions from use_witsols to a new package
  irreducible_components_interface, added verbose level to use_witsols.
  Move functions from use_mapcon into monomial_maps_interface,
  added verbose level to use_mapcon.  In use_c2phc4c.adb, passed the
  verbose level to use_series, use_scaling, use_mapcon, use_witsols.

Fri 24 Jul 2020 : moved functions from use_syscon.adb into new packages
  multprec_{polysys,laursys}_interface.  Move functions from use_padcon
  into the new package pade_continuation_interface, added the verbose
  level as parameter to use_padcon.  Moved functions from use_c2lrhom
  into the new package schubert_interface, added the verbose level
  parameter to use_c2lrhom.  Move more functions from use_syscon.adb
  into the *polysys_interface packages.

Thu 23 Jul 2020 : moved functions from use_syscon.adb into new packages
  {standard,dobldobl,quaddobl}_laursys_interface.

Sun 19 Jul 2020 : small update in standard_solution_interface.ads.
  New packages {dobldobl,quaddobl}_solution_interface with code extracted
  from use_solcon.adb.  Updated use_c2phc4c.adb to pass the verbose level
  to the use_syscon and use_solcon functions.  New package 
  symbol_table_interface with code extracted from use_c2phc4c.adb.

Sat 18 Jul 2020 : new package standard_polysys_interface with functions
  extracted from use_syscon, added verbose level to use_syscon.
  New packages {dobldobl,quaddobl}_polysys_interface with code from
  use_syscon.adb.  New package standard_solutions_interface with functions
  extracted from use_solcon, added verbose level to use_solcon.

Fri 17 Jul 2020 : added vrblvl to use_numbtrop and redefined the functions,
  adding verbose message and exception handlers.  Moved all functions that
  handle jobs from use_numbtrop into numerical_tropisms_interface, a new
  package to define the C interface to the numerical tropisms container.
  Modified use_c2pieri.adb for compiler warnings.

Fri 3 Jul 2020 : in use_c2phc4c, added vrblvl parameter.

Wed 1 Jul 2020 : added close(file) to job_handlers.adb.

Tue 30 Jun 2020 : extended job_handlers and use_c2phc4c with a job
  to compute a condition report in double precision.

Wed 24 Jun 2020 : moved definition of jobs for mixed volume and stable 
  mixed volume from use_c2phc4c.adb to job_handlers.

Thu 18 Jun 2020 : added 12 jobs from use_c2phc4c.adb to job_containers.

Wed 17 Jun 2020 : new package job_handlers with code from use_c2phc4c.adb.
  New package job_containers with job functions from use_c2phc4c.adb.

Tue 28 Apr 2020 : updated use_sweep.adb to pass the target values for a
  real sweep correctly.  Also passed the target value to the complex sweep
  correctly, in use_sweep, in case the start solution is not fully real.

Wed 1 Jan 2020 : for compiler warnings, modified use_reduction.adb,
  {standard,dobldobl,quaddobl}_polysys_container.adb, phcpack_operations.adb,
  use_sweep.adb.

Sat 7 Sep 2019 : added 3 jobs to use_solcon and use_c2phc4c to read solutions
  from file, given a file name.

Wed 21 Aug 2019 : updated use_padcon.adb to take in the multi-homogeneous
  input parameters.

Tue 20 Aug 2019 : added multi-homogeneous coordinate transformations to
  use_solcon, use_syscon, and use_c2phc4c.  Updates in use_padcon.adb
  for the passing of the (mhom, idz) parameters in the Standard_Track
  procedure of drivers_to_series_trackers.  Updated use_padcon for changes
  in DoblDobl_Track and QuadDobl_Track in drivers_to_series_trackers.

Tue 13 Aug 2019 : use_padcon takes the homogeneous coordinates option for
  the initialization of the step-by-step Pade tracker, updated use_c2phc4c.ads.

Mon 12 Aug 2019 : added a default value for the homogeneous argument
  of the step-by-step Pade tracker in use_padcon.adb.

Sat 10 Aug 2019 : added jobs to use_syscon and use_c2phc4c to transform a
  polynomial system into affine coordinates.  In use_padcon.adb, used the
  output_file of PHCpack_Operations instead of a local file variable.
  Added an extra parameter to use_padcon, a flag to indicate whether the
  file is local or the defined output file.

Fri 9 Aug 2019 : extended use_solcon and use_c2phc4c with jobs to transform
  solutions into affine coordinates.

Thu 8 Aug 2019 : use_syscon and use_c2phc4c have a function to add a symbol.
  Bug fix in use_c2phc4c.adb, called use_syscon instead of use_solcon.
  Extended use_padcon with an extra parameter to indicate that homogeneous
  coordinates will be applied.  Updated the documentation in use_c2phc4c.ads
  accordingly to the line added in use_padcon.ads.

Wed 7 Aug 2019 : in use_padcon.adb, added the instructions to write the
  target, start, and start solutions when the output file name is given.
  Added jobs to use_syscon, use_solcon, and use_c2phc4c for projective
  coordinate transformations.  Updated use_padcon.adb for the elimination
  of the sbeta homotopy continuation parameter.

Sat 27 Jul 2019 : added jobs to use_syscon and use_c2phc4c to generate 
  random polynomial systems in double double and quad double precision.

Fri 26 Jul 2019 : extended the job to make random systems in use_syscon.adb to 
  allow for systems with a different number of polynomials than variables.

Sat 13 Jul 2019 : added job to use_tabform and use_c2phc4c to return the
  dimensions of the tableau form of the system stored in the standard
  systems container.

Fri 12 Jul 2019 : fixed bug in use_tabform.adb for the total number of terms.

Tue 9 Jul 2019 : new use_tabform procedure to process tableau forms,
  updated use_c2phc4c with an additional job.  Updated use_c2phc4.ads
  and use_tabform with initialization of the systems container, given
  the data in tableau form.

Sun 7 Jul 2019 : improved use_syscon.adb for the output of systems with
  different number of equations than variables.

Wed 3 Jul 2019 : extended use_padcon and use_c2phc4c with four jobs to
  retrieve values of the step sizes and the estimated distance eta.

Tue 25 Jun 2019 : extended use_padcon with the tuning of the cbeta parameter,
  the multiplication factor for the curvature step size control.

Fri 21 Jun 2019 : added explicit range checks in cells_container.adb to
  the procedure to copy a target solution, in use_celcon.adb added the
  explicit check whether a target solution is null before appending.

Thu 20 Jun 2019 : extended cells_container.adb to add the solutions with
  all coordinates equal to zero, for the stable mixed volume case.

Tue 18 Jun 2019 : added a function to the cells_container to retrieve
  the k-th stable cell.  Removed a use clause from use_celcon.adb.
  Added procedures to the cells container to solve a start system
  corresponding to a stable mixed cell.
  Corresponding jobs added to use_celcon and use_c2phc4c.

Mon 17 Jun 2019 : updated cells_container with two retrieve functions
  and fixed the retrieval of mixed cells for stable mixed volumes.

Sun 16 Jun 2019 : added an extra initialize procedure to cells_container,
  called in job 79 of use_c2phc4c.adb, to store the stable mixed cells.
  Added functions to query the stable cells in cells_container,
  with added jobs to use_celcon and use_c2phc4c.

Sat 11 May 2019 : commented out the printing of the parsed solution in
  use_solcon.adb, with the append of a solution string in double precision.

Wed 27 Mar 2019 : adjusted use_nxtsol.adb for passing of the gamma constant.

Mon 21 Jan 2019 : bug fix in assignments_in_ada_and_c.adb, modifications in
  use_syscon.adb, use_solcon.adb, use_track.adb, use_series.adb, 
  use_padcon.adb, use_c2phc4c.adb, and use_c2phc.adb.

Sun 20 Jan 2019 : extra jobs to set the continuation parameter of solutions
  to zero, in use_solcon, use_c2phc4c; some modifications to use_padcon.adb.
  Added jobs to use_padcon and use_c2phc4c to initialize the natural parameter
  homotopy for the step-by-step Pade continuation.

Tue 8 Jan 2019 : added flushing of file in phcpack_operations_io.adb.
  Added job to write the homotopy continuation parameters to the defined
  output file in use_padcon and use_c2phc4c.

Mon 7 Jan 2019 : added procedures to phcpack_operations_io to read
  a target system in double double and quad double precision without
  its solutions, addded 2 jobs to use_track and use_c2phc4c.

Fri 28 Dec 2018 : added a function to use_padcon and use_c2phc4c to
  get the poles one after the other, for the C interface.

Thu 27 Dec 2018 : added functions to use_padcon and use_c2phc4c to pass
  the t value and the step size of the series-Pade tracker to C.
  Added functions to use_padcon and use_c2phc4c to pass the coefficients
  of the series and the Pade approximants to C.

Wed 26 Dec 2018 : added new functions to use_padcon and use_c2phc4c to
  pass the pole radius and the closest pole to the C interface.

Mon 24 Dec 2018 : added new_line after writing of solution in use_padcon.adb,
  at initialization time in verbose mode.

Sun 23 Dec 2018 : added 5 jobs in use_padcon and use_c2phc4c for the
  step-by-step Pade continuation.

Mon 10 Dec 2018 : in use_padcon.adb, added a close(file) at the end of
  the track procedures to ensure all output ended up on file.

Tue 4 Dec 2018 : fixed bug with getting the file name in use_padcon.adb,
  added verbose flag, documented in use_padcon.ads and use_c2phc4c.ads.
  Updated use_padcon.adb, so the verbose, not-to-file options writes all
  extra output to the standard output.

Mon 3 Dec 2018 : added calling the path trackers in use_padcon.adb.
  In use_padcon.adb, captured the name of the file.

Sun 2 Dec 2018 : added a job to use_padcon and use_c2phc4c to track paths
  with the new Pade predictors.

Sat 1 Dec 2018 : added jobs to use_padcon, use_padcon, with modifications
  to use_c2phc4c for tuning the homotopy continuation parameters.

Fri 30 Nov 2018 : new procedure use_padcon for Pade continuation,
  with updates in use_c2phc4c.adb, documented in use_c2phc4c.ads.

Fri 9 Nov 2018 : added constant degree bounds in use_series.adb; and then
  extracted the degree bound from the parameters, updated use_series.adb,
  as well as the specifications in use_series.ads.

Wed 7 Nov 2018 : adjusted use_series.adb for the new definitions of
  the series.

Thu 27 Sep 2018 : in calling the blackbox solver in use_c2phc4c.adb,
  treated the case for ntasks = 0 separately because deflation does not
  work yet properly with multitasking.

Fri 24 Aug 2018 : added 9 jobs to use_c2phc4c, for the witness solution data
  computed by the blackbox numerical irreducible decomposition.

Thu 23 Aug 2018 : the solver procedures in use_witsols.adb work.
  Added operations in use_witsols to load the witness solutions into
  the systems and solutions containers and to clear all witness solutions.

Wed 22 Aug 2018 : new use_witsols to interface to the witness solutions,
  as output of a numerical irreducible decomposition.
  Separated use_outdata (for DEMiCs) from use_c2phc4c.adb, so that
  use_c2phc4c is for all C main programs and use_c2phc for everything,
  including the C++ interface to DEMiCs.
  Added code to use_witsols.adb, to show the polynomial system on input.

Sat 18 Aug 2018 : removed declaration of pointer type to an array of
  polynomial systems in the {standard,dobldobl,quaddobl}_systems_pool.adb.

Thu 31 May 2018 : new job 844 in c2phc to compute the stable mixed volume
  by demics.

Tue 15 May 2018 : added job 843 to c2phc to call demics to compute 
  the mixed volume.

Sun 13 May 2018 : jobs added to use_c2phc to store the mixed volume.

Sat 12 May 2018 : added job to use_c2phc.ads and use_c2phc.adb.

Fri 11 May 2018 : updated use_c2phc with jobs to add cell indices,
  computed by DEMiCs.

Thu 10 May 2018 : to use_c2phc, added job codes to process the output data
  of DEMiCs.

Tue 1 May 2018 : in use_multip.adb, added printing to screen if verbose.

Thu 26 Apr 2018 : new use_multip to export computation of the multiplicity
  structure of an isolated solution of a polynomial system.
  Added job codes in use_c2phc and added return values to use_multip.

Tue 10 Apr 2018 : improved the documentation in use_c2mbt.adb.

Fri 6 Apr 2018 : use_c2phc.adb changed because of extra deflate parameter
  in the blackbox solver.

Wed 4 Apr 2018 : added multitasked homotopy membership tests to use_c2mbt.adb
  and updated the documentation in use_c2mbt.ads.

Tue 3 Apr 2018 : extended use_c2mbt.adb to extract the number of tasks
  from the input parameters.

Sat 3 Mar 2018 : added some extra verbose information to use_series.adb.

Mon 16 Oct 2017 : fixed miscount in job number in use_c2phc.adb, in calling
  use_celcon for the double double and quad double polyhedral homotopy.

Sat 23 Sep 2017 : added job for nonlinear reduction to use_reduction and to
  use_c2phc.  Fixed error message in exception handler in use_reduction.adb.

Tue 19 Sep 2017 : added two jobs to use_reduction and use_c2phc to apply
  linear reduction in double double and quad double precision.

Sun 17 Sep 2017 : added job code in use_c2phc for the linear reduction.

Fri 15 Sep 2017 : new procedure use_reduction, to interface the reduction
  of the coefficient matrix of a polynomial system.

Sun 10 Sep 2017 : in use_c2phc.adb, tested the root counters output string
  for null before further processing.

Sat 9 Sep 2017 : in the blackbox solver, called the link_to_string to prepare
  moving the writing the root counters output to the Python code, and then
  changed use_c2phc.adb more so all blackbox solvers return the string in b;
  fixed the documentation in use_c2phc.ads, describing the input and output
  parameters for the blackbox solvers.

Sun 6 Aug 2017 : added jobs to use_syscon and use_c2phc to drop variables
  of Laurent polynomial systems.

Sat 5 Aug 2017 : added print statements to use_c2mbt.adb if verbose is true.
  Fixed a bug in the get_input_integers of use_c2mbt.adb.
  Added 5 jobs to use_c2mbt and use_c2phc for the double double, quad double,
  and versions for witness sets defined by Laurent polynomial systems.

Fri 4 Aug 2017 : extended use_c2mbt and use_c2phc with a job for a homotopy
  membership test, taking a solution string on input.

Wed 2 Aug 2017 : uncommented the calls to the jobs to swap slack variables
  for witness sets defined by Laurent systems.

Tue 1 Aug 2017 : to use_c2phc.adb added six jobs to swap slack variables to
  the end for witness set processing.

Sun 30 Jul 2017 : added jobs to use_track and use_c2phc to make witness sets
  for hypersurfaces defined by Laurent polynomials.

Mon 24 Jul 2017 : defined procedures in phcpack_operations to define a
  diagonal homotopy for Laurent systems, added jobs to use_track & use_c2phc.

Mon 17 Jul 2017 : added initialization of the polynomial type to the
  standard_sampling_operations.adb.

Thu 13 Jul 2017 : extended {standard,dobldobl,quaddobl}_sampling_operations
  with initializer for Laurent systems, and added the initializer jobs to
  use_c2fac and use_c2phc.  Renaming of Laurent_Systems_Container into
  Standard_LaurSys_Container changed use_c2fac.adb, use_c2phc.adb,
  use_c2mbt.adb, use_celcon.adb, use_giftwrap.adb, use_mapcon.adb,
  use_syscon.adb, and ts_syscon.adb.  Jobs added to use_c2fac
  and use_c2phc to copy embedded systems from sampler to container.
  Bug fix in use_c2phc.adb with misaligned job codes.
  The standard Newton Laurent step (job 326 in use_c2phc.adb) must
  make a copy of the solution list, otherwise lib_factor does not work.

Mon 10 Jul 2017 : extended use_c2mbt with jobs to run homotopy membership
  tests on witness sets defined by Laurent polynomial systems.
  Copied the corresponding jobs to use_c2phc.
  Added jobs to use_c2fac and use_c2phc to read a witness set defined
  by a Laurent polynomial system.

Sat 8 Jul 2017 : swapping the embed symbols must occur in the systems and
  in the start solutions, fixed in phcpack_operations.adb.

Fri 7 Jul 2017 : fixed passing of number of tasks in use_c2phc.adb in the
  jobs which call the solve by Laurent homotopy continuation.
  Added jobs to use_c2phc to define Laurent homotopies.

Wed 5 Jul 2017 : to use_track.adb and use_c2phc.adb, added jobs to create
  cascade homotopy for Laurent systems in double, double double, and
  quad double precision.  Adjusted initialization in use_c2phc.adb because
  the default value of 1024 led to an unacceptable memory leak.

Tue 4 Jul 2017 : added jobs to use_c2phc.ads and use_c2phc.adb to copy
  from and into the contains for Laurent systems.

Mon 3 Jul 2017 : defined three jobs in c_to_phcpack and use_c2phc to solve
  a Laurent system with homotopy continuation.
  Define solve_by_*laurent*_continuation in phcpack_operations.adb.

Sun 2 Jul 2017 : added definition of cascade homotopies for Laurent systems
  in phcpack_operations.  Reading and writing of start and target systems
  in homotopies of Laurent systems added to phcpack_operations_io.
  Add 15 jobs to c_to_phcpack and use_c2phc.

Sat 1 Jul 2017 : added operations to phcpack_operations to store and
  retrieve start and target Laurent systems.  To phcpack_operations,
  added procedure to create and clear homotopies for Laurent systems.

Fri 30 Jun 2017 : fixed memory leak in Job439 of use_c2phc.adb.
  Fixed bug in size_limit function for Laurent polynomials in standard
  double precision in use_syscon.adb.

Thu 29 Jun 2017 : to use_c2phc, added jobs to embed Laurent systems.

Sat 10 Jun 2017 : added job codes for the crude path trackers in use_track
  and use_c2phc.

Fri 9 Jun 2017 : updated ts_runtrack.adb with append to solutions container.
  New package crude_path_trackers, with code factored out from ts_runtrack.

Thu 8 Jun 2017 : new ts_runtrack.adb to develop path trackers which
  immediately allow to check the progress of the trackers.

Mon 5 Jun 2017 : adjusted use_series.adb to work with indices which are
  different from the last coordinate.

Sun 4 Jun 2017 : fixed bugs in use_series.adb for double double and
  the quad double precision.

Fri 2 Jun 2017 : more verbose job in use_series.adb for bug hunting.

Thu 1 Jun 2017 : misaligned job numbers is use_c2phc to call use_series.
  Fixed extraction of the parameters for the Pade approximant and made
  progress for the correct construction with a natural parameter homotopy.

Wed 31 May 2017 : added the job numbers in use_c2phc for Pade approximants.
  Completed the Pade approximant computations in use_series.adb.

Tue 30 May 2017 : added documentation to jobs 3, 4, and 5 in use_series.ads.
  Provided skeleton for the jobs to compute a Pade approximant in use_series.

Sat 22 Apr 2017 : commented out the Show_Input_Planes_and_Points in the
  running of the Pieri homotopies in use_c2pieri.adb.

Tue 21 Mar 2017 : in use_c2phc.adb, captured the silent option in the
  blackbox solvers for regular polynomial systems.

Mon 19 Dec 2016 : added five jobs to use_syspool and use_c2phc;
  and two more jobs to make systems in the pool.  Bug fix in use_c2phc.adb,
  in the initialization of the quad double system pool.

Sat 17 Dec 2016 : extended use_series.adb with methods to compute series
  starting a series with more terms, using the echelon Newton method.
  Added three operations to use_c2phc.

Sun 20 Nov 2016 : fixed use_c2lrhom.adb for the extra parameter nt
  (number of tasks) in the Resolve procedure of Schubert problems.

Sun 16 Oct 2016 : bug fix in Job61 in use_celcon.adb with dimension
  retrieved from Cells_Container instead of Integer_Cells_Container.

Thu 13 Oct 2016 : added make subdivision job to use_celcon and use_c2phc.

Wed 12 Oct 2016 : fixed job numbers in use_celcon, inserting a job.

Tue 11 Oct 2016 : extended integer_cells_container with a make_subdivision
  procedure, tested by ts_celcon, for user defined integer lifting.
  Added jobs 49 to 50 to the case of use_celcon.adb.
  New jobs in use_celcon.adb to interface to integer_cells_container.
  Added job codes to use_c2phc, to export to the C interface.

Thu 6 Oct 2016 : new package integer_cells_container, tested by ts_celcon.
  Extended ts_celcon.adb with more tests.

Wed 7 Sep 2016 : added jobs to move start solutions from the cells container
  to the solutions container, in use_celcon and use_c2phc.

Fri 1 Jul 2016 : added size jobs to use_syspool and use_c2phc.

Thu 30 Jun 2016 : added call to quaddobl Run_Newton in use_series.adb.
  Renamed systems_pool into standard_systems_pool, which changed use_syspool
  and ts_syspool.  New packages {dobldobl,quaddobl}_systems_pool with
  added tests to ts_syspool.  Used the new packages in use_series.adb.
  Added copy operations to copy from the systems pool to the container,
  to use_syspool and use_c2phc.

Wed 29 Jun 2016 : new procedure use_series to define the gateway of the
  power series Newton method to the C interface, added jobs to use_c2phc.

Sat 21 May 2016 : defined matrix symbols in use_c2lrhom.adb.

Fri 20 May 2016 : improved documentation in use_c2lrhom.adb, and added
  silent mode of running the Littlewood-Richardson homotopies, which runs
  without output to file.  Options 'minrep' and 'tosquare' recognized.
  In silent mode, use_c2lrhom.adb must intialize symbol table...

Thu 19 May 2016 : updated use_c2lrhom.adb for the extra flag on whether to
  square overdetermined homotopies or not.

Sat 26 Mar 2016 : changed use_c2phc.adb to prepare for passing the numerical
  tolerances to the deflation methods.  In use_c2phc.ads Updated the 
  documentation for the parameters and tolerances passed through.

Fri 25 Mar 2016 : modified use_c2phc.adb to enable the application of Newton's
  method on overdetermined ordinary and Laurent polynomial systems.

Wed 16 Mar 2016 : changes in phcpack_operations for Laurent systems on
  overdetermined systems.

Sat 5 Mar 2016 : more updates in phcpack_operations for overdetermined systems.

Fri 4 Mar 2016 : adjusted phcpack_operations.adb to call the overdetermined
  path trackers in the case of overdetermined polynomial systems.

Sat 27 Feb 2016 : changes in phcpack_operations.adb for changes in the
  increment-and-fix continuation in standard double precision.

Mon 15 Feb 2016 : added a job to scan a string for the number of symbols
  used as variables in the string representation for a polynomial system.

Tue 9 Feb 2016 : added initialization of the numerical tropisms container
  to phcpack_operations.adb.

Thu 4 Feb 2016 : fixed error message in exception handler, in use_numbtrop.adb.

Fri 29 Jan 2016 : to the numerical_tropisms_container, added functions that
  return the dimension of the tropisms, added three jobs to use_numbtrop,
  and to use_c2phc as well.

Sat 23 Jan 2016 : fixed bug in the dimension calculation in use_numbtrop.adb
  and improved the documentation in use_numbtrop.ads and use_c2phc.ads.

Thu 21 Jan 2016 : completed the gateway procedure use_numbtrop.
  Added 18 jobs in the range 701 to 718 to use_c2phc.

Wed 20 Jan 2016 : new package numerical_tropisms_container to manage the
  data structures for numerically computed tropisms.  The procedure
  use_numbtrop provides a way to access the numerical_tropisms_container.

Tue 19 Jan 2016 : extended the solve_by_{standard, dobldobl, quaddobl}_
  homotopy_continuation procedures in phcpack_operations.adb with the
  application of polyhedral end games.

Mon 18 Jan 2016 : extra procedures in phcpack_operations that pass the 
  estimated winding number, path direction, and its error from the
  polyhedral end games.

Thu 7 Jan 2016 : updates in phcpack_operations.adb and pieri_homotopy.adb 
  for the added winding number in the polyhedral end games.

Sat 26 Dec 2015 : bug fixes in use_c2mbt.adb.

Fri 25 Dec 2015 : new use_c2mbt for the homotopy membership test, with three
  new jobs in use_c2phc.

Thu 24 Dec 2015 : added jobs to use_c2fac and use_c2phc to make the 
  factorization go mute in double double and quad double precision.
  Add jobs to use_c2fac and use_c2phc for a verbose monodromy breakup.

Tue 22 Dec 2015 : improved exception handler messages in use_c2fac.adb.

Fri 18 Dec 2015 : jobs added to use_c2fac and use_c2phc to store random
  complex double double and quad double constants for the monodromy breakup.

Thu 17 Dec 2015 : added two jobs to use_c2fac and use_c2phc, then some more,
  and then still more.  Added jobs to generate random complex numbers in
  double double and quad double precision to use_c2fac and use_c2phc.

Wed 16 Dec 2015 : new packages {dobldobl,quaddobl}_monodromy_permutations
  to manage data for monodromy breakup with double doubles and quad doubles.
  Standardized naming of packages, added to sampling_operations and
  monodromy_permutations.  More jobs added to use_c2fac and use_c2phc.

Tue 15 Dec 2015 : documented the new job codes in use_c2phc.ads for the
  monodromy breakup in double double and quad double precision.
  Two new jobs for monodromy breakup in double double and quad double
  precision in use_c2fac and use_c2phc. 

Mon 14 Dec 2015 : new packages {dobldobl,quaddobl}_sampling_operations,
  for use in use_c2fac to export the monodromy in double double and
  quad double precision to C and Python, with added job codes in use_c2phc.
  Added more operations to use_c2fac to assign coefficients in double
  double and quad double precision.

Sun 13 Dec 2015 : added jobs to use_c2phc to embed systems in double double
  and quad double precision.  Added jobs to use_solcon and use_c2phc to
  replace a solution in double double and quad double precision.

Fri 20 Nov 2015 : bug fix in phcpack_operations.adb with the computation
  of the start solutions to start the extrinsic diagonal cascade.

Thu 19 Nov 2015 : use_c2phc.adb uses square_and_embed_systems instead of
  drivers_to_cascade_filtering.

Wed 11 Nov 2015 : use_track.adb changed because of the renaming of
  hypersurface_witness_sets and its io with a new drivers package
  standard_hypersurface_witdrivers.  Extended use_track and use_c2phc
  with jobs to compute a witness set of a hypersurface in double double
  and quad double precision.

Tue 10 Nov 2015 : renaming some procedures in phcpack_operations and
  extending with double double and quad double versions, made available
  through use_track and use_c2phc.  Extended use_track and use_c2phc
  with jobs to collapse the diagonal for double doubles and quad doubles.

Mon 9 Nov 2015 : updated phcpack_operations.adb for a new package
  standard_diagonal_solutions, factored out of extrinsic_diagional_homotopies.
  Extended PHCpack_operations with procedures to make diagonal homotopies
  in double double and quad double precision, called in use_{track, c2phc}.

Sun 8 Nov 2015 : added to use_track and use_c2phc jobs to double the number
  of symbols to write the target system to start the diagonal cascade.

Sat 7 Nov 2015 : removed output written to screen in phcpack_operations
  when excuting the start_diagonal_cascade_solutions operation.

Thu 5 Nov 2015 : use_sweep.adb calls the proper routines to run a sweep,
  with a silent version in case polynomials and solutions are real.
  Add double double and quad double versions to use_sweep.adb.
  Called the silent versions of the real sweep in use_sweep.adb,
  for double double and quad double precision.

Wed 4 Nov 2015 : provides skeleton for the real sweep in use_sweep, adding
  a new job number that is also available in use_c2phc.

Mon 2 Nov 2015 : updates in use_sweep for the bug fix that now allows to
  store systems with a different number of variables, different from the
  number of equations.

Sun 1 Nov 2015 : some ad hoc changes in use_sweep because the systems
  containers are not set up for underdetermined systems, and the select
  and join of solutions use the number of variables as input parameter
  in a different manner.

Fri 30 Oct 2015 : added call to starting a complex convex continuation in
  use_sweep and use_c2phc.

Thu 29 Oct 2015 : extended parameter_homotopy_state with management of the
  values for start and target values at various level of precision.
  Extended use_sweep with operations to set and get the start and target
  values for the parameters, tested by ts_use_sweep.
  Added the ten jobs of use_sweep to use_c2phc.

Wed 28 Oct 2015 : new package parameter_homotopy_state and C gateway
  function use_sweep, tested by ts_use_sweep.

Thu 22 Oct 2015 : changed use_c2lrhom.adb for the renaming of the
  intersection_solution_posets into standard_solution_posets.
  Added documentation to use_c2lrhom.ads.  Placing standard_ in front of
  bracket_polynomials (& _systems) changed pieri_homotopy.adb.
  Added verify flag as extra input in use_c2lrhom.adb.
  Two extra jobs were added to use_c2lrhom to run L-R homotopies in
  double double and quad double precision, extended to use_c2phc.

Thu 15 Oct 2015 : updated use_c2lrhom.adb for the new option to resolve
  Schubert problem with an efficient formulation of the equations.

Thu 8 Oct 2015 : added two jobs to use_c2phc to get and set the value of
  a continuation parameter.

Thu 1 Oct 2015 : changes in cells_container.adb and use_c2phc.adb for the
  added induced permutation to Black_Mixed_Volume_Computations procedures.

Sat 26 Sep 2015 : added jobs to use_c2phc to call the blackbox solvers in
  double double and quad double precision.

Tue 22 Sep 2015 : use_syscon and use_c2phc provide operations to return the
  computed size limit of a string representation for (Laurent) polynomials
  stored in the systems containers.

Sun 6 Sep 2015 : extended phcpack_operations with path trackers for
  Laurent systems in double double and quad double precision.

Mon 31 Aug 2015 : blackbox solvers in use_c2phc.adb did not capture the
  number of tasks, as arguments passed from the C interface, fixed this bug.

Thu 30 Jul 2015 : bug fix in use_scaling for scaling of solutions.

Tue 21 Jul 2015 : bug fix in use_scaling, both in the implementation and the
  specification; corresponding job codes added to use_c2phc.
  Bug fix in assignments_in_ada_and_c.adb for qd complex vector assignment,
  from Ada to C.

Thu 2 Jul 2015 : new gateway use_scaling to scale systems and solutions.

Wed 1 Jul 2015 : extended assignments_in_ada_and_c to pass vectors of
  double doubles, quad doubles, complex double doubles, complex quad doubles.

Wed 24 Jun 2015 : added retrieve_current and move_current to the
  {standard,dobldobl,quaddobl,multprec}_solutions_container packages.
  Extended use_solcon and use_c2phc with 12 extra jobs.

Tue 23 Jun 2015 : in {standard,dobldobl,quaddobl,multprec}_solutions_container
  added retrieve_next_solution operations for faster retrieval of long lists.
  Added three additional jobs in use_solcon and use_c2phc.
  New package file_management with code out of standard_solutions_containers,
  which changed use_solcon.adb and phcpack_operations_io.adb.
  Use access to file_type in file_management, tested by ts_filman,
  which removes the Ada 2005 errors.

Mon 15 Jun 2015 : added job in use_c2phc to get the seed of the random
  number generators.

Thu 26 Mar 2015 : added jobs to use_giftwrap and use_c2phc to compute an
  initial form of a Laurent system.

Wed 25 Mar 2015 : extended multprec_giftwrap_container with extra methods
  to store a string.  New functions in use_giftwrap and use_c2phc to compute
  the support of a Laurent polynomial.

Mon 23 Feb 2015 : in use_nxtsol.adb provided commented out test code
  for the passing of the string representation for target and start systems
  when initializing the variable precision path tracker.

Mon 19 Jan 2015 : updates in use_nxtsol.adb, uncommenting messages...

Thu 8 Jan 2015 : altered the spefication of the initialization of the
  variable precision homotopy in use_nxtsol, also updating use_c2phc.ads.
  Because of different string beginnings it is better to pass the length
  of a string, rather than an absolute position.

Wed 7 Jan 2015 : added forgotten case handler in use_nxtsol.adb.

Tue 6 Jan 2015 : new job to use_nxtsol and use_c2phc to get the current
  variable precision solution.

Mon 5 Jan 2015 : added variable precision get_next path tracker interface
  to use_nxtsol and use_c2phc.

Fri 19 Dec 2014 : checked for size of support when calling the blackbox
  solver in use_c2phc.adb.

Tue 25 Nov 2014 : better exception handling message in use_syscon.adb.

Mon 24 Nov 2014 : added exception handlers (commented out) in use_solcon.adb
  to chase a bug.

Sun 23 Nov 2014 : added job 179 to use_c2phc for the variable precision
  Newton's method.

Wed 5 Nov 2014 : upgraded use_c2phc.adb to apply the drivers to square and
  embed a polynomial system from drivers_to_cascade_filtering.

Fri 31 Oct 2014 : the use_c2lrhom.adb must use the general resolve for the
  C and Python interfaces to handle general Schubert problems.

Thu 30 Oct 2014 : updated use_c2lrhom.adb to fit the tol parameter when
  calling Littlewood-Richardson homotopies.

Fri 12 Sep 2014 : initialization of the supports added to cell_container,
  exported via use_celcon and use_c2phc.

Thu 11 Sep 2014 : added mixed_volume function to the cells_container,
  updated gateways use_celcon and use_c2phc.

Mon 8 Sep 2014 : set pointers to matrices in multprec_giftwrap_containers
  to null when clearing.  Added clear operations to use_giftwrap and made
  them available in use_c2phc.

Sun 7 Sep 2014 : extended multprec_giftwrap_container with functions that
  return the stored point configuration in 3-space or 4-space.
  The use_giftwrap exports the string representation of a facet
  and also use_c2phc is extended.

Sat 6 Sep 2014 : added job codes in use_c2phc to call use_giftwrap.

Fri 5 Sep 2014 : extra operations in use_giftwrap, tested by ts_use_giftwrap,
  and extended tests in ts_giftwcon.

Thu 4 Sep 2014 : new package multprec_giftwrap_container, tested by
  ts_giftwcon for the results of the 3d and 4d giftwrapping method.

Wed 3 Sep 2014 : called use_giftwrap in use_c2phc, removed diagnostic
  printing from use_giftwrap.adb.

Tue 2 Sep 2014 : new use_giftwrap gateway, tested by ts_use_giftwrap.

Thu 28 Aug 2014 : new unisolve gateway for the univariate root finders
  in PHCpack, for export to C.  Added job codes in use_c2phc.
  New test program ts_unisolve.  Fixed forgotten assignment in unisolve.adb.
  Extened unisolve and use_c2phc to work with arbitrary multiprecision.

Fri 8 Aug 2014 : added functions to use_c2phc to deflate singularities
  in double double and quad double precision.

Wed 30 Jul 2014 : bug fix in use_c2phc.adb for Newton step on Laurent system
  in standard double precision.

Mon 28 Jul 2014 : extended use_c2phc with operations to do one Newton step
  on Laurent polynomial systems for standard double, double double,
  quad double, and multiprecision arithmetic.

Sun 27 Jul 2014 : added store/load operations to use_syscon for Laurent
  systems with multiprecision coefficients, also added to use_c2phc.

Sat 26 Jul 2014 : added operations to the use_syscon gateway to deal with
  systems of multiprecision Laurent systems.  Provided the operations also
  to the central gateway use_c2phc.

Fri 25 Jul 2014 : new multprec_laursys_container, tested by ts_syscon for
  Laurent systems with multprecision complex coefficients.

Thu 24 Jul 2014 : added four extra jobs to use_c2phc to parse strings and
  write to strings Laurent polynomials in dd and qd precision.
  To use_syscon, added an extra operation to load a Laurential 
  in standard precision and did the similar thing to use_c2phc.

Wed 23 Jul 2014 : extended use_syscon with operations to parse strings and
  write to strings Laurent polynomials in dd and qd precision.

Tue 22 Jul 2014 : added permute operations for double double and quad double
  polynomial and Laurent systems to use_celcon and use_c2phc.

Mon 21 Jul 2014 : access to double double and quad double Laurent polynomials
  container via use_syscon and use_c2phc.

Sun 20 Jul 2014 : reading of double double and quad double Laurent polynomials
  improved in {dobldobl,quaddobl}_complex_laur_systems_io.adb.

Sun 13 Jul 2014 : new package quaddobl_tableau_formats, tested by ts_tabform.
  In dobldobl_tableau_formats.adb, added writing of separating space between
  real and imaginary part of complex number.

Sat 12 Jul 2014 : new package dobldobl_tableau_formats, tested by ts_tabform.

Sun 6 Jul 2014 : new package quaddobl_poly_laur_convertors to convert poly
  systems with quad double coefficients into Laurent polynomial systems.

Sat 5 Jul 2014 : new package dobldobl_poly_laur_convertors.

Thu 3 Jul 2014 : fixed compilation error in dobldobl_laur_poly_convertors.adb
  and in quaddobl_laur_poly_convertors.adb.

Wed 2 Jul 2014 : new packages {dobl,quad}dobl_laur_poly_convertors.

Wed 25 Jun 2014 : extended symbol_table with a function to return the
  standard variables x1, x2, ... useful for random systems.

Tue 24 Jun 2014 : new package dobldobl_complex_poly_randomizers.

Mon 23 Jun 2014 : improved access of data in generic_jacobian_matrices.adb.

Thu 29 May 2014 : modified multprec_complex_laurentials_io.adb for a
  compiler warning.

Thu 28 Nov 2013 : new package multprec_random_polynomials, tested by
  ts_randpoly.adb.

Thu 27 Jun 2013 : updated standard_random_laurentials.

Wed 26 Jun 2013 : updated string_system_readers for natural32.

Fri 21 Jun 2013 : because of warnings removed with/use clauses from
  multprec_to_standard_convertors.adb.

Mon 17 Jun 2013 : updated matrix_indeterminates for natural32 and integer32.

Sat 8 Jun 2013 : fixed ts_randpoly.adb, with changes to
  {standard,dobldobl,quaddobl}_random_polynomials, also updated
  {dobldobl,quaddobl}_complex_laurentials_io and
  {dobldobl,quaddobl}_complex_{poly,laur}_systems_io.

Fri 7 Jun 2013 : about half of all files changed because of the integer32...

Wed 29 May 2013 : explicit raise instead of return for the phc -g bug
  in parse_strings_to_polynomials.adb.

Tue 28 May 2013 : edits in parse_strings_to_polynomials.adb and maingood.adb
  to trace why phc -g hangs when an overflow of the unknowns occurred in the
  last line of the input.

Sat 25 May 2013 : added more documentation to maingood.ads and fixed a bug
  in Symbol_Table_io.Write.  Extended maingood.adb.
  Suppressed output when raising exception in symbol_table.adb.
  New package parse_strings_to_polynomials with code from maingood.adb.

Thu 23 May 2013 : added output file to maingood.adb.

Wed 22 May 2013 : made maingood.adb better.

Tue 21 May 2013 : updated maingood.adb.

Mon 20 May 2013 : new maingood to implement new option phc -g to check
  if a system is good.

Thu 18 Apr 2013 : additions to standard_tableau_formats.

Tue 16 Apr 2013 : change in standard_tableau_formats for compiler warning.

Mon 15 Apr 2013 : added four new functions to standard_tableau_formats,
  to extract coefficients and exponent into a vectored data structure.

Fri 22 Feb 2013 : new exception handlers to standard_complex_poly_strings.adb.

Wed 20 Feb 2013 : fixed bug in standard_complex_{poly,laur}_strings.adb.

Fri 8 Feb 2013 : new package multprec_system_readers, cloned off from
  the standard_system_readers, as needed in mainpoco.adb.
  Did the same for multprec_laur_poly_convertors, but what was actually
  needed in mainpoco was the string_system_readers, a new package.

Mon 28 Jan 2013 : new packages {dobldobl,quaddobl}_complex_poly_strings,
  tested by ts_parse.

Tue 13 Nov 2012 : modified standard_complex_laur_lists to distinguish
  clearly between shallow and deep constructors and destructors,
  and added concatenate operation.

Mon 12 Nov 2012 : added a package standard_complex_laur_lists,
  tested by ts_laurlist.

Wed 21 Oct 2012 : exception handlers in standard_complex_laurentials_io.adb
  to track a bug with t^-2...

Wed 4 Jul 2012 : changed standard_monomial_evaluations.adb for the case
  when there are no common factors and fixed a similar bug in
  standard_speelpenning_products: when the monomial is constant or
  consists of just one variable.

Thu 28 Jun 2012 : extended coefficient_supported_polynomials, tested
  by the new ts_cffsup.adb.

Wed 27 Jun 2012 : new package coefficient_supported_polynomials, used in
  ts_speel.adb.  Updates in standard_gradient_evaluations so any polynomial
  and its gradient can be evaluated.  Extended to double double and quad 
  double arithmetic with new {dobldobl,quaddobl}_gradient_evaluations.

Tue 26 Jun 2012 : updates in standard_gradient_evaluations, tested by
  ts_speel.adb.

Sun 24 Jun 2012 : edits in {standard,dobldobl,quaddobl}_monomial_evaluations
  and {standard,dobldobl,quaddobl}_speelpenning_products, tested by
  ts_speel.adb.  Also changes in ts_randpoly.adb.

Sat 26 May 2012 : fixed spelling mistake in ts_speel.adb and separated the
  code in the new package standard_speelpenning_products.  Created new
  packages {dobldobl,quaddobl}_speelpenning_products, tested by ts_speel.
  Create {standard,dobldobl,quaddobl}_monomial_evaluations for the
  evaluation of monomials, the common factors in the gradients of the
  monomials, using standard, double double, and quad double arithmetic.

Wed 21 Mar 2012 : touched standard_complex_poly_systems_io.adb to trace a bug,
  which got fixed in standard_complex_polynomials_io.adb.

Sat 10 Sep 2011 : exteded ts_speel.adb to deal with more general monomials.

Sun 4 Sep 2011 : created ts_speel.adb to test Speelpenning's example.

Thu 9 Jun 2011 : updated ts_parse.adb for warnings and for the parsing
  of numbers from a string.

Wed 1 Jun 2011 : changed {dobldobl,quaddobl}_complex_polynomials_io.adb,
  {dobldobl,quaddobl}_polynomial_convertors.adb for warnings.
  Extended {dobldobl,quaddobl}_complex_poly_systems_io with a get procedure.

Sun 29 May 2011 : changed matrix_indeterminates.adb and 
  standard_poly_laur_convertors.adb for warnings.

Sun 22 May 2011 : changed {standard,multprec}_complex_{poly,laur}_strings.adb
  and {standard,multprec}_complex_{polynomials,laurentials}_io.adb for
  crashing on double brackets.

Fri 20 May 2011 : standard_evaluator_packages.adb needed string_splitters,
  ts_evaline.adb no longer compiled.  Changed ts_expvec.adb, ts_jaco.adb,
  ts_laurpoly.adb, ts_subs.adb for warnings.

Sun 15 May 2011 : fixed standard_complex_poly_strings.adb to deal with
  cases like x^(-1) where the exponent is between round brackets.
  Fixed multprec_complex_poly_strings.adb just as well.

Sat 14 May 2011 : fixed a bug in standard_complex_polynomials_io.adb.
 Fixed also the corresponding multprec_* and *_laurentials_io versions,
 and the parsing in {standard,multprec}*strings.adb.

Tue 10 May 2011 : extended ts_randpoly with code to write random systems.
  Fixed get(lp) problem in {dobldobl,quaddobl}_complex_poly_systems_io.adb.

Mon 9 May 2011 : bug in parsing of a factor of a polynomial in 
  multprec_complex_{laur,poly}_strings.adb. 
  For bug hunting, added print statement in symbol_table.adb.

Mon 11 Oct 2010 : {dobl,quad}dobl_complex_{polynomials,larentials}_io.adb
  had bug: writing of complex coefficients without plus connector.

Mon 27 Sep 2010 : updated {dobldobl,quaddobl}_complex_{poly,laur}_systems_io
  to set the working precision accordingly for the get operations.

Sun 26 Sep 2010 : updated ts_parse.adb with 4 routines to test parse.

Sat 25 Sep 2010 : created multprec_complex_poly_strings to parse polynomials
  with multiprecision coefficients from a string.  Because of shared code,
  altered standard_complex_poly_strings.a*, tested by a changed ts_parse.adb.
  Updated multprec_complex_polynomial_io.adb, with working precision.
  Also changed multprec_complex_laurentials_io.adb and ts_laurpoly.adb.

Sat 18 Sep 2010 : to quaddobl_complex_{laur,poly}_systems_io added get to
  read any system from file.

Thu 16 Sep 2010 : updated ts_parse.adb to read a system of polynomial as
  an array of strings from file.

Mon 13 Sep 2010 : extended dobldobl_complex_{poly,laur}_systems_io with
  another get procedure to read systems from file.

Tue 8 Jun 2010 : extended standard_random_polynomials.ad* and
  new packages {dobldobl,quaddobl}_random_polynomials tested by ts_randpoly.

Mon 7 Jun 2010 : extended dobldbol_complex_poly_systems_io with get
  and did also for corresponding quaddobl_ and _laur_ systems_io.

Sun 6 Jun 2010 : instantiated {dobldobl,quaddobl}_complex_poly_sysfun.ads.
  Provided basic output for dobldobl, quaddobl complex polynomials,
  laurentials and their corresponding systems.

Wed 2 Jun 2010 : new package standard_system_readers,
  made changes in generic_laur_poly_functions.adb to search for a bug...
  Extended standard_tableau_formats to Laurent systems to verify that
  reading of Laurent systems went fine.  Added one test to ts_laurpoly.adb
  on all partial derivatives of a Laurent polynomial.

Fri 28 May 2010 : {dobldobl,quaddobl}_polynomial_convertors.adb use
  the type convertors of {dobldobl,quaddobl}_complex_numbers_cv.
  Instantiated {dobldobl,quaddobl}_complex_laur_sysfun.

Thu 27 May 2010 : introduced QD doubles with instantiated packages
  {dobldobl,quaddobl}_complex_{polynomials,laurentials,functions}.
  Also added are {double_double,quad_double}_{polynomials,functions}.
  DoblDobl_Polynomial_Convertors are tested by ts_ddpol.
  Create multprec_complex_laurentials_io.adb, tested by ts_laurpoly.adb
  and adjusted multprec_complex_polynomials_io.adb.
  Updated multprec_complex_laur_systems.ads and created input/output in
  the new package multprec_complex_laur_systems_io, tested by ts_laurpoly.
  Instantiated {dobldobl,quaddobl}_complex_{poly,laur}_systems.
  Instantiated {dobldobl,quaddobl}_complex_jaco_matrices and
  {double,quad}_double_jaco_matrices.

Thu 13 May 2010 : fixed skipping of new_line symbol in package
  standard_complex_laur_systems_io.adb and multprec_complex_poly_systems_io.adb
  copying from standard_complex_poly_systems_io.adb.

Fri 6 Nov 2009 : redundant use clause from standard_complex_poly_systems_io.adb
  also changed generic_jacobian_matrices.adb, generic_polynomial_functions.adb,
  symbol_table_io.adb and generic_poly_system_functions.adb,
  standard_to_multprec_convertors.adb, standard_laur_poly_convertors.adb
  for GNAT GPL 2009 warnings.

Mon 26 Oct 2009 : added routines to standard_laur_poly_convertors in case
  the Laurent polynomials do not contain any negative exponents.

Fri 9 Oct 2009 : fix in Diff of generic_laurent_polynomials.adb,
  similar patch as in generic_laur_poly_functions.adb (see Sep 23 2009).

Wed 30 Sep 2009 : commented out exception handlers in
  generic_polynomial_functions.adb.

Wed 23 Sep 2009 : fixed on bug in generic_laur_poly_functions.adb
  but more work is definitely needed...

Fri 11 Sep 2009 : adding exception handler to an evaluator fixes the
  crash with phc -0 -b cyclic7 /tmp/out.

Wed 25 Aug 2009 : new procedure "Add_String" in symbol_table.

Thu 6 Aug 2009 : updates in {standard,multprec}_complex_polynomials_io,
  standard_complex_laurentials_io.adb, standard_complex_{laur,poly}_strings.adb
  all to deal with brackets and powers of polynomials.

Wed 5 Aug 2009 : documentation update in standard_complex_polynomials_io.adb
  and similar fix in multprec_complex_polynomials_io.adb for brackets and
  powers of polynomials.

Tue 4 Aug 2009 : fixed standard_complex_polynomials_io.adb to deal with
  brackets and powers of polynomials.

Thu 30 Jul 2009 : added ** and pow to generic_polynomials and also
  to generic_laurent_polynomials.  standard_complex_polynomials_io.adb
  got updated as well.

Tue 14 Jul 2009 : adjusted some if-then-else formatting in generic_lists.adb.

Mon 13 Jul 2009 : added "constant" to a declaration for gnat warning.
  Bug in line_breaks for standard_complex_laurentials_io.adb: the
  exponent d can be negative for Laurent polynomials!

Sun 12 Jul 2009 : created standard_random_laurentials.

Thu 25 Dec 2008 : further optimizations to ts_evalpoly.adb.

Fri 19 Dec 2008 : used ts_evalpoly.adb to develop new Horner scheme
  to evaluate multivariate polynomials more efficiently.

Thu 18 Dec 2008 : because of bug with mt_newton.adb, changed code in
  generic_polynomial_functions.adb and generic_polynomials.adb.

Mon 1 Sep 2008 : copied symbol_table.adb and ts_poly.adb from toto,
  because apparently the older versions were still on phcpack.

Thu 14 Aug 2008 : for better feedback on errors when parsing polynomials,
  changed symbol_table.adb, {standard,multprec}_complex_poly_systems_io.adb,
  standard_complex_laur_systems_io.adb, parse_polynomial_exceptions_io.ads,
  ts_poly.adb, and deleted parse_polynomial_exceptions.adb.

Fri 6 Jun 2008 : formatting in generic_polynomial_functions.adb, fixed
  two bugs in generic_laur_poly_functions.adb, extended ts_laurpoly.adb.
  This caused phc -m not to work on Laurent systems!

Sat 26 Apr 2008 : changed standard_complex_poly_strings.ads: text_io is
  not needed.  Also changed standard_complex_laur_strings.ads.

Thu 3 Jan 2008 : because of warnings in GNAT GPL 2006, changed
  symbol_table.adb, standard_complex_poly_systems_io.a*, ts_poly.adb,
  multprec_complex_polynomials_io.adb and graded_lexicographic_order.adb.

Wed 2 Jan 2008 : changed generic_polynomials.adb, and
  standard_complex_polynomials_io.adb for warnings in GNAT GPL 2006.

Sat 29 Dec 2007 : generic_polynomials.adb got touched but not changed
  when searching for a bug: not enlarging symbol table before adding 't'!

Thu 27 Dec 2007 : added Is_Real to standard_complex_to_real_poly.ads.

Thu 20 Dec 2007 : added Minimal_Degrees and Maximal_Degrees to
  generic_polynomials, copying from generic_laurent_polynomials.

Wed 19 Dec 2007 : added Downsize operation to symbol_table. 
  Touched the standard_complex_polynomials_io.adb when debugging.

Wed 26 Sep 2007 : updated standard_complex_to_real_poly and
  standard_floating_poly_systems_io.

Sun 19 Aug 2007 : standard_complex_laurentials_io.adb now accepts exponents
  enclosed in round brackets; created package standard_complex_laur_strings,
  tested by ts_parse, not complete yet.

Fri 3 Aug 2007 : improved documentation of standard_complex_substitutors.ads.
  Discovered the name "Laurential" an improvement over "laur_polys" for a
  contraction of "Laurent polynomial", so "standard_complex_laur_polys*"
  became "standard_complex_laurentials*".  The change also affected the
  files *laur_functions.ads, *laur_systems*, ts_laurpoly.adb, exponent_vectors,
  *laur_poly_convertors*, *poly_laur_convertors*, *laur_sysfun*, *laur_jaco*,
  standard_complex_laur_randomizers.ads, and ts_poly.adb.

Thu 5 Jul 2007 : added "Is_Genuine_Laurent" functions to
  standard_laur_poly_convertors.ads, needed for stable mixed volumes.

Wed 20 Jun 2007 : only added and then removed some put statements in
  generic_laur_poly_functions when debugging mixed_homotopy_continuation.

Wed 13 Jun 2007 : fixed generic_laur_poly_functions.adb, with a bit more
  testing in ts_laurpoly.adb.

Tue 12 Jun 2007 : added "Head" function to generic_polynomials and
  generic_laurent_polynomials, bug fix in standard_complex_laur_polys_io.adb,
  editing in generic_{polynomial,laur_poly}_functions.adb.

Mon 11 Jun 2007 : extended standard_complex_laur_systems_io with output
  procedures that also write first the number of equations.
  Fixed bug in standard_complex_laur_polys_io.adb, put('*') -> put(file,'*').

Thu 3 May 2007 : added also ASCII.LF in standard_complex_polynomials_io.adb.
  standard_complex_poly_strings mirrors standard_complex_polynomials_io in
  the parsing of strings.

Wed 2 May 2007 : ASCII.LF is added to symbol_table_io.adb, as one
  of the symbols which must be ignored when parsing a symbol.
  The puts for debugging in standard_complex_poly_strings.adb were
  later removed, so standard_complex_poly_strings.adb did not change.

Tue 1 May 2007 : new package line_breaks, modified symbol_table,
  standard_complex_polynomials_io.adb, multprec_complex_polynomials_io,
  standard_complex_laur_polys_io.adb, ts_laurpoly.adb and ts_poly.adb.

Mon 30 Apr 2007 : bug fixes in ts_parse.adb, improvements in 
  standard_complex_polynomials_io.adb and standard_complex_poly_strings.
  Also multprec_complex_polynomials_io.adb improved.
  Moved exceptions from parse_polynomial_exceptions into symbol_table,
  changed symbol_table_io and {standard,multprec}_complex_poly_systems_io.adb.
  Created standard_complex_laur_systems_io, tested by ts_laurpoly.adb.

Wed 25 Apr 2007 : arranged standard_complex_polynomials_io.adb so that
  the carriage return (captured by ASCII.CR) is skipped.

Mon 23 Apr 2007 : added test on parsing of numbers to ts_parse.adb.

Sat 21 Apr 2007 : added output of factors to standard_complex_laur_polys_io.
  Write_Plus used in standard_complex_polynomials_io.adb.
  Also changed ts_laurpoly.adb which now outputs Laurent polynomials.

Thu 19 Apr 2007 : standard_complex_polynomials_io.adb is a bit leaner,
  added new output routines to standard_complex_laur_polys_io.

Sat 14 Apr 2007 : started development of standard_complex_laur_polys_io,
  new ts_laurpoly.adb.  Code from {standard,multprec}_complex_polynomials_io
  got moved to {standard,multprec}_parse_numbers.  Exceptions are now
  defined in new package parse_polynomial_exceptions, which changed the
  specifications of *polynomials_io and the body of *systems_io.

Fri 13 Apr 2007 : edited in standard_complex_polynomials_io.adb.

Tue 27 Mar 2007 : {standard,multprec}_floating_poly_systems_io provides i/o
  for systems with real coefficients, tested by ts_rpol.
  Added "Set_Size" for real polynomials to standard_to_multprec_convertors.

Sat 18 Mar 2007 : added initialization procedure in matrix_indeterminates.

Sat 3 Feb 2007 : created {standard,multprec}_floating_jaco_matrices,
  tested by ts_rpol.adb.  Cleaned up the indentation problems in 
  standard_complex_poly_strings.adb and moved functions to a new
  package "strings_and_numbers" in the Numbers Library.

Fri 2 Feb 2007 : created standard_floating_polynomials, and the convertors
  standard_complex_to_real_poly, tested by ts_rpol.  Added also
  standard_floating_poly_systems, all the functions, with all their
  multiprecision versions as well.

Mon 18 Dec 2006 : added "Link_to_Array_of_Symbols" in symbol_table.ads
  and cleaned up "Symbol_Array" type in symbol_table.adb.

Wed 18 Oct 2006 : moved definitions for representations from adb to ads
  in generic_polynomial_functions and generic_laur_poly_functions,
  because of GNAT 3.3.5 20050117 (prerelease) (SUSE Linux).

Wed 28 Jun 2006 : added "put_pair" to standard_complex_polynomials_io and
  standard_complex_poly_systems_io for general double float coefficients.
  Created the package "standard_tableau_formats", called by ts_tabform,
  to convert back and forth systems in tableau formats.

Fri 23 Jun 2006 : changed standard_complex_poly_systems_io.adb.

Mon 20 Mar 2006 : moved scan_line out of standard_complex_poly_systems_io.adb
  and multprec_complex_poly_systems_io.adb into System/file_scanning.
  Changed standard_complex_poly_systems_io to use ^ as default power symbol.

Sun 19 Mar 2006 : cosmetic change to generic_lists.ads, added put_terms to
  standard_complex_polynomials_io.ads, and of course updated .adb as well.

Thu 5 Jan 2006 : added access types to generic_laur_system_functions
  and to generic_laur_jaco_matrices.

Mon 2 Jan 2006 : added Link_to_Exponent_Vectors_Array in the
  exponent_vectors package, needed for cells container.

Tue 27 Dec 2005 : changed multprec_complex_polynomials_io.adb to fix the
  reading of -x, fixing two bugs in that package!

Wed 21 Dec 2005 : the creation of multprec_complex_matrices required
  multprec_complex_poly_ring, multprec_complex_poly_vectors, with their
  corresponding *_io declarations as well.

Mon 27 Jun 2005 : added user friendly get in multprec_complex_poly_systems_io.

Sun 9 Jan 2004 : added ts_subs to substitute variables by constants.

Thu 26 Aug 2004 : get for link_to_poly_sys uses "out" instead of
  "in out" in standard_complex_poly_systems_io.ads;
  added a clear in standard_complex_polynomials_io.adb,
  simplified data structures in generic_polynomial_functions.

Thu 24 Jun 2004 : added an array of Eval_Poly_Sys
  to generic_poly_system_functions.ads and added array types
  to generic_jacobian_matrices, all needed for ts_deflate.

Tue 22 Jun 2004 : inlined graded lexicographic order routines in
  generic_polynomials to make phc run on spinner.

Wed 24 Sep 2003 : added a type "Array_of_Symbols" to the
  package Symbol_Table to allow customized symbols in poly output.
  this changed standard+multprec_complex_polynomials_io
  and standard+multprec_complex_poly_systems_io.

Sat 13 Sep 2003 : added "Write" to the symbol_table_io,
  to write out all symbols currently in the table.

**************** since release 2.2 beta *********************

Sat 14 August 1999 : changed ts_poly.adb, due to change in
  Standard_Random_Vectors.Random_Vector.  Updated ts_poly.adb
  with a tester on the evaluation of Laurent polynomials.
  There was a bug in that evaluation routine, because it was
  never been tested since the upgrade!
  The package generic_laur_poly_functions.adb is debugged.
  Copied ts_poly.adb and generic_laur_poly_functions.adb to the
  public distribution directory.

Sat 25 September 1999 : cosmetic change in ts_poly.adb.
  generic_polynomial_functions and generic_laur_poly_functions
  contained the same bug : forgotten "or else" instead of "or".
  The bug only occurred in the non-optimized mode.
  Copied ts_poly.adb, generic_polynomial_functions.adb and
  generic_laur_poly_functions.adb to PHCv2p.

Sat 5 February 2000 : the output of multi-precision complex
  polynomials needed the initialization of the symbol table.
  There was no default standard output format available.
  This new version can write polynomials with empty symbol table.

Mon 7 February 2000 : multi-precision output of multivariate
  polynomials wrote exponents always on standard output instead
  of on file.

Thu 9 March 2000 : added very basic package for output of
  multi-precision system of complex polynomials.

Thu 16 March 2000 : standard_to_multprec_convertors, added
  the Set_Size procedure.

Sat 3 June 2000 : standard_complex_poly_systems_io.adb,
  the get(lp) routine was incorrect for underdetermined systems.

Mon 26 June 2000 : generic_polynomial_systems.ads :
  added "Array_of_Poly_Sys".

Sat 30 Sep 2000 : added "put(file,delimiter);" 
  in multprec_complex_polynomials_io.adb

Sun 5 Aug 2001 : added the package standard_complex_poly_strings to
  convert between strings and polynomials, with "ts_parse" as tester.

Thu 9 Aug 2001 : modified the "get(file,lp)" operation in
  standard_complex_poly_systems_io.adb so that it handles now also
  polynomial with a different number of unknowns than equations

Tue 28 Aug 2001 : in standard_complex_poly_strings, added the conversion
  operators for polynomial systems, tested new routines with ts_parse.

Mon 29 Oct 2001 : modified standard_complex_polynomials_io.adb so
  that also the 'e' in the scientific notation of numbers is accepted
  as well, next to the 'E'.

Wed 14 Nov 2001 : started the development in ts_jaco of a symbolic
  expansion of the determinant of the Jacobi matrices

Mon 13 May 2002 : modified standard_complex_polynomials_io.adb so that
  also the 'I' is accepted (next to the 'i') for the square root of -1

Sun 2 Feb 2003 : added a create to the Symbol_Table, to convert a string
  of characters into a symbol.

Thu 13 Mar 2003 : the put_line in standard_complex_poly_systems_io.adb
  did not put the number of variables in case of nonsquare systems.

Thu 15 May 2003 : added "Equal" of symbols in symbol_table

Tue 20 May 2003 : added "standard_random_polynomials" and ts_randpoly.
