project funky is

    type OS_type is ("linux", "windows", "macosx");
    os : OS_type := external("os", "linux");

    case os is
        when "linux" | "macosx" =>
            for Source_Dirs use
                (".", "../../System", "../../System/Unix_Timer",
                 "../../Math_Lib/Numbers", "../../Math_Lib/QD",
                 "../../Math_Lib/Vectors", "../../Math_Lib/Matrices",
                 "../../Math_Lib/Reduction", "../../Math_Lib/Divisors",
                 "../../Math_Lib/Polynomials", "../../Math_Lib/Functions",
                 "../../Math_Lib/Circuits", "../../Math_Lib/Supports",
                 "../../Math_Lib/Series", "../../Deformations/Solutions",
                 "../Types");
            for Languages use ("Ada", "C");
            for Excluded_Source_Files use 
            (
                "pieri_solver.ads", "pieri_solver.adb",
                "verify_solution_maps.ads", "verify_solution_maps.adb"
            );
        when "windows" =>
            for Source_Dirs use
                (".", "../../System", "../../System/Basic_Timer",
                 "../../Math_Lib/Numbers", "../../Math_Lib/QD",
                 "../../Math_Lib/Vectors", "../../Math_Lib/Matrices",
                 "../../Math_Lib/Reduction", "../../Math_Lib/Divisors",
                 "../../Math_Lib/Polynomials", "../../Math_Lib/Functions",
                 "../../Math_Lib/Supports", "../../Math_Lib/Circuits", 
                 "../../Math_Lib/Series", "../../Deformations/Solutions",
                 "../Types");
            for Excluded_Source_Files use
            (
                "pieri_solver.ads", "pieri_solver.adb",
                "verify_solution_maps.ads", "verify_solution_maps.adb"
            );
            for Languages use ("Ada", "C");
    end case;

    for Object_Dir use "../../../Objects";
    for Exec_Dir use "../../../bin";

    for Main use
    (
        "ts_cosup.adb",          -- tests support polynomials
        "ts_cosuptoc.adb",       -- tests passin polynomials to C
        "ts_cosupoly.c",         -- C program calling the conversions
        "ts_cosupsys.c",         -- C program to pass system from C to Ada
        "ts_cosuptoc.adb",       -- tests passing from Ada to C
        "ts_getsys.c",           -- tests reading/writing systems
        "ts_phc_sys_rw.c",       -- tests read/write of systems in C
        "ts_csols.adb",          -- tests conversion operations
        "ts_phc_sol_rw.c",       -- tests read/write of solutions in C
        "ts_cpm.adb"             -- tests complex polynomial matrices
       -- "ts_pieri_count.c",      -- C function calls Ada Pieri_Count
       -- "ts_pieri_solver.c",     -- C function calls Ada Pieri_Solver
    );

    package Compiler is

        for Default_Switches ("Ada") use ("-gnatwa", "-gnatva");

    end Compiler;

    package Linker is

       for Switches ("ts_cosupoly.c") use ("-lm");
       for Switches ("ts_cosupsys.c") use ("-lm");
       for Switches ("ts_getsys.c") use ("-lm");
       for Switches ("ts_phc_sys_rw.c") use ("-lm");
       for Switches ("ts_phc_sol_rw.c") use ("-lm");

    end Linker;

end funky;
