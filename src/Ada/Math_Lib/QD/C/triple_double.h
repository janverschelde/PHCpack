/* file: triple_double.h */

/* This file contains the header files for a standalone,
   self-contained collection of routines for triple double arithmetic,
   based on the CAMPARY and the QD software libraries.

All functions in this library have the prefix td_
to avoid potential name clashes with other multiple doubles. */

#ifndef __triple_double_h__
#define __triple_double_h__

/************************* normalizations ************************/

void td_fast_renorm
 ( double x0, double x1, double x2, double x3,
   double *r0, double *r1, double *r2 );
/*
 * DESCRIPTION :
 *   The definition is based on the fast_renorm2L<4,3>,
 *   from code of the specRenorm.h, generated by the CAMPARY library,
 *   in an unrolled form (Valentina Popescu, Mioara Joldes), with
 *   double double basics of QD-2.3.9 (Y. Hida, X.S. Li, and D.H. Bailey).
 *
 * ON ENTRY :
 *   x0       most significant word;
 *   x1       second most significant word;
 *   x2       third most significant word;
 *   x3       least significant word.
 *
 * ON RETURN :
 *   r0       highest part of a triple double number;
 *   r1       middle part of a triple double number;
 *   r2       lowest part of a triple double number. */

/****************************** copy *****************************/

void td_copy ( const double *a, double *b );
/*
 * DESCRIPTION :
 *   Copies the content of the triple double a to the triple double b. */

/******************* addition and subtraction *********************/

/* triple double = triple double + triple double */
void td_add ( const double *a, const double *b, double *c );
/*
 * DESCRIPTION : c = a + b, or in words:
 *   Adds two triple doubles in a and b to make the triple double c. */

/* triple double = - triple double */
void td_minus ( double *a );
/*
 * DESCRIPTION :
 *   Flips the sign of a. */

/* triple double = triple double + triple double */
void td_sub ( const double *a, const double *b, double *c );
/*
 * DESCRIPTION : c = a - b, or in words:
 *   Subtracts from the triple doubles in a
 *   the triple double in b to make the triple double c. */

/**************  multiplications and division ***********************/

/* triple double = triple double * triple double */
void td_mul ( const double *a, const double *b, double *c );
/*
 * DESCRIPTION : c = a * b, or in words:
 *   Multiples the triple doubles a and b to make the triple double c. */

/* triple double = triple double * double */
void td_mul_td_d ( const double *a, double b, double *c );
/*
 * DESCRIPTION : c = a * b, or in words:
 *   Multiples the triple double a with the double b
 *   to make the triple double c. */

/* triple double = triple double / triple double */
void td_div ( const double *a, const double *b, double *c );
/*
 * DESCRIPTION : c = a / b, or in words:
 *   Divides the triple double a by the triple double b
 *   to make the triple double c. */

/********************** random number generator ************************/

void td_random ( double *x );
/*
 * DESCRIPTION :
 *   Returns in x a random triple double number in [0,1]. */

/************************ basic output *********************************/

void td_write_doubles ( const double* x );
/*
 * DESCRIPTION :
 *   Writes the three doubles in the triple double number x. */

#endif /* __triple_double_h__ */
