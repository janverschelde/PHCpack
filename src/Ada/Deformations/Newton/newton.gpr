project newton is

    type OS_type is ("linux", "windows", "macosx");
    os : OS_type := external("os", "linux");

    case os is
        when "linux" | "macosx" =>
            for Source_Dirs use
                (".", "../../System", "../../System/Unix_Timer",
                 "../../Math_Lib/Numbers", "../../Math_Lib/QD",
                 "../../Math_Lib/Vectors", "../../Math_Lib/Matrices",
                 "../../Math_Lib/Reduction", "../../Math_Lib/Supports",
                 "../../Math_Lib/Polynomials", "../../Math_Lib/Functions",
                 "../../Math_Lib/Series", "../../Math_Lib/Circuits",
                 "../Solutions", "../Homotopy", "../../Tasking",
                 "../../Schubert/SAGBI",
                 "../../Components/Interpolators");
        when "windows" =>
            for Source_Dirs use
                (".", "../../System", "../../System/Basic_Timer",
                 "../../Math_Lib/Numbers", "../../Math_Lib/QD",
                 "../../Math_Lib/Vectors", "../../Math_Lib/Matrices",
                 "../../Math_Lib/Reduction", "../../Math_Lib/Supports",
                 "../../Math_Lib/Polynomials", "../../Math_Lib/Functions",
                 "../../Math_Lib/Series", "../../Math_Lib/Circuits",
                 "../Solutions", "../Homotopy", "../../Tasking",
                 "../../Schubert/SAGBI",
                 "../../Components/Interpolators");
            for Languages use ("Ada", "C");
    end case;

    for Object_Dir use "../../../Objects";
    for Exec_Dir use "../../../bin";

    for Main use
    (
        "ts_ddnewt.adb",       -- tests dobldobl_root_refiners
        "ts_qdnewt.adb",       -- tests quaddobl_root_refiners
        "ts_rootrefi.adb",     -- calls the root refiners
        "ts_mreseva.adb",      -- multiprecision residual computation
        "ts_newton.adb",       -- interactive testing routine on Newton
        "ts_realnewt.adb",     -- development of Newton for real numbers
        "ts_numdif.adb",       -- tests numerical differentiation
        "ts_jactrees.adb",     -- tests trees of Jacobian matrices
        "ts_deflop.adb",       -- to make systems to look for singularities
        "ts_deftrees.adb",     -- interactive test on derivative trees
        "ts_defmat.adb",       -- working with deflation matrices
        "ts_deflate.adb",      -- interactive test on deflation
        "ts_straight.adb",     -- tests straight-line programs
        "ts_stair.adb",        -- tests examples from the staircase
        "ts_multip.adb",       -- computation of multiplicity structure
        "ts_muldef.adb",       -- tests higher-order deflation
        "ts_vmpnewt.adb",      -- tests variable precision Newton
        "ts_newcirc.adb"       -- tests Newton on coefficient circuits
    );

    package Compiler is

        for Default_Switches ("Ada") use ("-gnatwa", "-gnatva");

    end Compiler;

end newton;
